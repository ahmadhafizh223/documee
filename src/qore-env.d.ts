// [WARNING] This file is generated by running `$ qore codegen` on your root project, please do not edit

/// <reference types="@feedloop/qore-client" />
import { QoreSchema } from "@feedloop/qore-client";

declare module "@feedloop/qore-client" {
  type DepartemenTableRow = {
    id: string;
    name: string;
    description: string;
    project: { nodes: ProjectTableRow[] };
    user1: { nodes: User1TableRow[] };
  };

  type DocumentationDetailTableRow = {
    id: string;
    title: string;
    projectId: ProjectIdTableRow;
    categoryId: CategoryIdTableRow;
    timestamp: Date;
    description: string;
    contributors: ContributorsTableRow;
  };

  type DocumentCategoryTableRow = {
    id: string;
    name: string;
    documentationDetail1: { nodes: DocumentationDetail1TableRow[] };
  };

  type MemberTableRow = {
    id: string;
    email: string;
    role: { id: string; displayField: string };
    password: string;
  };

  type ProjectTableRow = {
    id: string;
    name: string;
    deptPic: DeptPicTableRow;
    projectMember: { nodes: ProjectMemberTableRow[] };
    documentationDetail: { nodes: DocumentationDetailTableRow[] };
  };

  type RoleTableRow = {
    id: string;
    name: string;
    description: string;
    user2: { nodes: User2TableRow[] };
  };

  type UserTableRow = {
    id: string;
    name: string;
    project1: { nodes: Project1TableRow[] };
    departemen: DepartemenTableRow;
    email: string;
    password: string;
    role: RoleTableRow;
    documentationDetail2: { nodes: DocumentationDetail2TableRow[] };
  };

  type AllMemberViewRow = {
    read: {
      id: string;
      email: string;
      role: { id: string; displayField: string };
      password: string;
    };
    write: {
      email: string;
      password: string;
    };
    params: {};
    actions: {};
  };

  type AllProjectViewRow = {
    read: {
      id: string;
      name: string;
      deptPic: DeptPicTableRow;
      projectMember: { nodes: ProjectMemberTableRow[] };
    };
    write: {
      name: string;
      deptPic: string[];
      projectMember: string[];
    };
    params: {};
    actions: {};
  };

  type AllDepartemenViewRow = {
    read: {
      id: string;
      name: string;
      description: string;
    };
    write: {
      name: string;
      description: string;
    };
    params: {};
    actions: {};
  };

  type AllUserViewRow = {
    read: {
      id: string;
      name: string;
      departemen: DepartemenTableRow;
      email: string;
      password: string;
      role: RoleTableRow;
    };
    write: {
      name: string;
      departemen: string[];
      email: string;
      password: string;
      role: string[];
    };
    params: {};
    actions: {};
  };

  type AllDocumentationDetailViewRow = {
    read: {
      id: string;
      title: string;
      timestamp: Date;
      projectId: ProjectIdTableRow;
      categoryId: CategoryIdTableRow;
      description: string;
      contributors: ContributorsTableRow;
    };
    write: {
      title: string;
      timestamp: Date;
      projectId: string[];
      categoryId: string[];
      description: string;
      contributors: string[];
    };
    params: {};
    actions: {};
  };

  type AllDocumentCategoryViewRow = {
    read: {
      id: string;
      name: string;
    };
    write: {
      name: string;
    };
    params: {};
    actions: {};
  };

  type AllRoleViewRow = {
    read: {
      id: string;
      name: string;
      description: string;
    };
    write: {
      name: string;
      description: string;
    };
    params: {};
    actions: {};
  };

  interface ProjectSchema extends QoreSchema {
    allMember: AllMemberViewRow;
    allProject: AllProjectViewRow;
    allDepartemen: AllDepartemenViewRow;
    allUser: AllUserViewRow;
    allDocumentationDetail: AllDocumentationDetailViewRow;
    allDocumentCategory: AllDocumentCategoryViewRow;
    allRole: AllRoleViewRow;
  }
}
